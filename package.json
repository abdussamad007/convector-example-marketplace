{
  "name": "@worldsibu/convector-example-marketplace",
  "version": "1.0.0",
  "description": "Marketplace example using Convector",
  "main": "index.js",
  "author": "",
  "license": "ISC",
  "scripts": {
    "wait": "sleep 5",
    "user:fingerprint": "f () { node -e \"console.log(JSON.parse(require('fs').readFileSync('./.hfc-$1/$2', 'utf8')).enrollment.identity.certificate)\" | openssl x509 -fingerprint -noout | cut -d '=' -f2 ; }; f",
    "================= Life cycle =================": "==================================",
    "install": "npm-run-all -s lerna:install",
    "init": "npm-run-all -s env:init 'cc:start -- 1'",
    "start": "npm-run-all -s env:start",
    "clean": "npm-run-all -s env:stop env:clean",
    "restart": "npm-run-all -s clean install start init",
    "test": "npm-run-all -s lerna:test",
    "================= Lerna =================": "==================================",
    "lerna:install": "lerna bootstrap",
    "lerna:build": "lerna run build",
    "lerna:stop": "lerna run stop --parallel",
    "lerna:clean": "lerna clean --yes && lerna run clean --parallel",
    "lerna:test": "lerna exec npm run test",
    "lerna:lint": "lerna run lint",
    "================= Dev Env =================": "==================================",
    "env:init": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/init.sh",
    "env:start": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/start.sh",
    "env:stop": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/stop.sh",
    "env:restart": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/restart.sh",
    "env:clean": "./node_modules/@worldsibu/convector-tool-dev-env/scripts/clean.sh",
    "================= Chaincodes =================": "==================================",
    "cc:start": "f() { npm-run-all -s cc:package -p \"cc:install -- org1 $1\" \"cc:install -- org2 $1\" -s wait \"cc:instantiate -- $1\"; }; f",
    "cc:package": "chaincode-manager --config ./org1.chaincode.config.json --output ./chaincode package",
    "cc:install": "f() { chaincode-manager --config ./$1.chaincode.config.json install ./chaincode marketplace $2; }; f",
    "cc:instantiate": "chaincode-manager --config ./org1.chaincode.config.json instantiate marketplace",
    "cc:upgrade": "chaincode-manager --config ./org1.chaincode.config.json upgrade marketplace",
    "cc:invoke": "f() { chaincode-manager --config ./$1.chaincode.config.json invoke marketplace ${@:2}; }; f"
  },
  "devDependencies": {
    "@types/chai": "^4.0.4",
    "@types/mocha": "^2.2.43",
    "@types/node": "^10.3.2",
    "@types/uuid": "^3.4.3",
    "@worldsibu/convector-tool-chaincode-manager": "^1.1.5",
    "@worldsibu/convector-tool-dev-env": "^1.1.5",
    "lerna": "^2.11.0",
    "npm-run-all": "^4.1.3"
  }
}
